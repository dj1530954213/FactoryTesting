// <auto-generated />
using FatFullVersion.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FatFullVersion.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250407102739_change2")]
    partial class change2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("FatFullVersion.Entities.PlcConnectionConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AddressStartWithZero")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConnectTimeOut")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataFormat")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCheckMessageId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPersistentConnection")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsStringReverse")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsTestPlc")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReceiveTimeOut")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SleepTime")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SocketKeepAliveTime")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("Station")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IsTestPlc");

                    b.ToTable("PlcConnectionConfigs");
                });

            modelBuilder.Entity("FatFullVersion.Entities.ValueObject.ComparisonTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChannelAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("ChannelType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CommunicationAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChannelAddress", "ChannelType");

                    b.ToTable("ComparisonTables");
                });
#pragma warning restore 612, 618
        }
    }
}
