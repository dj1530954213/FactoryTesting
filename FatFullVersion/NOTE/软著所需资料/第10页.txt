软件源代码文档 - 第 10 页
==================================================
项目名称: FatFullVersion - 工业自动化测试系统
文档生成时间: 2025-05-26 10:49:04
页码: 10 / 578
==================================================

0451:                 return new ApplicationDbContext(optionsBuilder.Options);
0452:             }
0453:             catch (Exception ex)
0454:             {
0455:                 Console.WriteLine($"创建数据库上下文失败: {ex.Message}");
0456:                 Console.WriteLine($"堆栈跟踪: {ex.StackTrace}");
0457:                 throw;
0458:             }
0459:         }
0460:     }
0461: } 
0462: 
0463: // ==========================================
0464: // 文件: FatFullVersion\FatFullVersion\Data\DataMigrator.cs
0465: // ==========================================
0466: using System;
0467: using System.Threading.Tasks;
0468: using Microsoft.EntityFrameworkCore;
0469: using System.Linq;
0470: 
0471: namespace FatFullVersion.Data
0472: {
0473:     /// <summary>
0474:     /// 数据库迁移和初始化辅助类
0475:     /// </summary>
0476:     public static class DataMigrator
0477:     {
0478:         /// <summary>
0479:         /// 确保数据库已创建
0480:         /// </summary>
0481:         /// <param name="context">数据库上下文</param>
0482:         /// <returns>异步任务</returns>
0483:         public static async Task EnsureDatabaseCreatedAsync(ApplicationDbContext context)
0484:         {
0485:             try
0486:             {
0487:                 // 确保数据库存在
0488:                 await context.Database.EnsureCreatedAsync();
0489:                 
0490:                 // 检查数据库是否已创建
0491:                 if (!await context.Database.CanConnectAsync())
0492:                 {
0493:                     throw new Exception("无法连接到数据库");
0494:                 }
0495:             }
0496:             catch (Exception ex)
0497:             {
0498:                 throw new Exception($"创建数据库失败：{ex.Message}", ex);
0499:             }
0500:         }
